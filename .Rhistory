setwd("C:\\Users\\CC7\\Downloads")
assign("x", 4) ##Para asignar valores a variables tambien
r <- numeric(4) ##Te asegura que lo que va a recibir es un número
r[1] <- 2
z <- logical(length = 0)
##Operador módulo
5%%2
## Division
# / division decimal
# %/% división entera
10/7
10%/%7
# En java && ||
# En R & |
x<-2
x == 3 & x < 6
#Tipos de datos
#Caracter, numero (double, integer)
#Lógico(boolean), complejos raw
nombre <-"Hugo"
edad <- 36L
cantidad <- 4
bandera <- T #TRUE, T o F, 1 o 0
raiz <- 3 + 5i
binario <- raw(2)
typeof(bandera)
func1 <- function(x, arithmetic=TRUE){
if(is.character(x) | is.logical(x)){
print("El argumento no es numerico")
}else{
if(arithmetic == TRUE){
sum(x) / length(x)
}else{
prod(x)^(1/length(x))
}
}
return("Cualquier cosa")
}
x <- c(2,3,4,5)
m <- func1(x)
func1
# Rango
d <- 1:5
typeof(d)
#Utilizando la funcion seq
e <- seq(1,5, by=1.5)
e
#Replicando elementos
f<- rep(2:4, times=4)
#Usando la funcion scan
?scan
g <- scan()
inventario[2]
inventario <- c('manzana'=30, 'pera'=10)
inventario2 <- c(inventario, 'pera'=10)
inventario2
inventario[2]
inventario[1:2]
inventario <- union(inventario, c('pera'=12))
inventario[c(1,3)]
inventario[-3]
inventario[-(2:3)]
inventario <- inventario[-3]
inventario
union??
+
x
inventario2
inventario <- c('manzana'=12, 'platano'=10, 'pera'=8)
inventario
inventario[inventario<10]
inventario[inventario== 6]
inventario[inventario== 8]
inventario[inventario %in% c(2,3,6,30)]
inventario[inventario %in% c(2,3,8,30)]
inventario[inventario %in% 2:30]
setwd("C:\\Users\\Informatica\\Documents\\Escuela\\ExtracciónDeConocimiento\\ExtraccionDeConocimiento")
maraton <- read.csv("maraton_ny.csv",
header = TRUE,
row.names = 1,
sep = ",",
dec=".")
maraton$age
maraton$gender
maraton[3,4]
maraton[3:4]
maraton[[1:10], [1:2]]
maraton[1:10, 1:2]
maraton[3,4]
maraton[, c(1,5)]
maraton[4, c(1,5)]
maraton[c(1,100), ]
maraton[1:100, ]
44
View(maraton[maraton$gender=='Female',])
View(maraton[maraton$gender=='Female',])
maraton[maraton$gender=='Female',]
View(maraton[maraton$gender=='Female',])
View(maraton[maraton$gender=='Female' & maraton$age==23])
View(maraton[maraton$gender=='Female' & maraton$age==23,])
??count
dim(maraton)
nrow(maraton)
length(maraton)
dimension <- dim(maraton)
dimension
typeof <-(dimension)
typeof(dimension)
??integer
??rank
rank(inventario)
inventario
rank(maraton$time)
maraton$time
?which.max
which.max(maraton$age)
#Obtener key y posicion del elemento MAX y Min
which.max(maraton$age)
which.min(maraton$time)
house <- read.csv("house_rental.csv",
header = TRUE,
row.names = 1,
sep = ",",
dec=".")
house <- read.csv("house_rental.csv",
header = TRUE,
sep = ",",
dec=".")
str(house)
house[house&Bedroom[60000:80000]]
View(house)
house&Bedroom
house[house&price[60000:80000]]
house$Price
sum(house[house$Price>=60000 & house$Price<=80000, 5])
